places[i,2] = width[[(i %% length(width) + 1) ]]
}
places = as.data.frame(places)
names(places) = ("height","width")
places = as.data.frame(places)
names(places) = c("height","width")
places = places %>% dplyr::filter(!height %in% steps$y & !width %in% steps$x)
height = seq(min(c(steps$y,steps$g,steps$d)),max(c(steps$y,steps$g,steps$d)))
width = seq(min(c(steps$x,steps$z,steps$f)),max(c(steps$x,steps$z,steps$f)))
places= matrix(ncol=2,nrow=length(width)*length(height))
for (i in seq(length(width)*length(height))) {
places[i,1] = height[[ceiling(i/length(width))]]
}
for (i in seq(length(width)*length(height))) {
places[i,2] = width[[(i %% length(width)) ]]
}
places = as.data.frame(places)
names(places) = c("height","width")
places = places %>% dplyr::filter((!height %in% steps$y & !width %in% steps$x)) %>%
dplyr::filter((!height %in% steps$g & !width %in% steps$f)) %>%
dplyr::filter((!height %in% steps$d & !width %in% steps$z))
height = seq(min(c(steps$y,steps$g,steps$d)),max(c(steps$y,steps$g,steps$d)))
width = seq(min(c(steps$x,steps$z,steps$f)),max(c(steps$x,steps$z,steps$f)))
places= matrix(ncol=2,nrow=length(width)*length(height))
for (i in seq(length(width)*length(height))) {
places[i,1] = height[[ceiling(i/length(width))]]
}
for (i in seq(length(width)*length(height))) {
places[i,2] = width[[(i %% length(width)) ]]
}
names(places) = c("height","width")
places = as.data.frame(places) %>% mutate(id=paste0(height,"-","width"))
for (i in seq(length(width)*length(height))) {
places[i,2] = width[[(i %% length(width) + 1)]]
}
names(places) = c("height","width")
places = as.data.frame(places) %>% mutate(id=paste0(height,"-",width))
places = as.data.frame(places)
names(places) = c("height1","width1")
places = places  %>% mutate(id=paste0(height1,"-",width1))
help(pivot_longer)
steps2 = steps %>% mutate(id1=paste0(y,"-",x)) %>% mutate(id1=paste0(g,"-",f)) %>% mutate(id1=paste0(d,"-",z))
steps2 = steps %>% mutate(id1=paste0(y,"-",x)) %>% mutate(id2=paste0(g,"-",f)) %>% mutate(id3=paste0(d,"-",z))
places = places %>% dplyr::filter((!id %in% steps2$id1)) %>%
dplyr::filter((!id %in% steps2$id2)) %>%
dplyr::filter((!id %in% steps2$id3))
length(width)*length(height))
length(width)*length(height)
places[[height1]]
places[[1]]+places[[2]]
places[[1,1]]+places[[1,2]]
(places[[1,1]]+places[[1,2]])^(3)
(places[[1,1]]+places[[1,2]])^(1/3)
(places[[1,1]]+places[[1,2]])^(1/2)
(places[[1,1]]+places[[1,2]])^(1/3)
places = places %>% mutate(indic = case_when(height1+width1 >= 0 ~ height1+width1, height1+width1 < 0 ~ -height1-width1))
places = places %>% mutate(i2 = indic^(1/3))
places %>% group_by(i2) %>% summarize(bin = floor(i2,10))
help(round)
help(floor)
places %>% group_by(i2) %>% summarize(bin = floor(i2,digits=-3))
places %>% group_by(i2) %>% summarize(bin = round(i2,digits=-3))
places %>% group_by(i2) %>% summarize(bin = round(i2,digits=-2))
places %>% summarize(bin = round(i2,digits=-2))
places %>% summarize(bin = round(i2,digits=-1))
places %>% summarize(bin = round(i2,digits=-1))
hist(places$i2)
ggplot() +
geom_point(data=steps, mapping=aes(x=x,y=y,color=indx),alpha=0.1) +
theme_void() +
scale_colour_gradientn(colours = c("purple", "orange")) +
new_scale_colour() +
geom_point(data=steps,mapping=aes(x=z,y=d,color=indx),alpha=0.1) +
scale_colour_gradientn(colours = c("blue", "grey80")) +
theme(legend.position="none") +
new_scale_colour() +
geom_point(data=steps,mapping=aes(x=f,y=g,color=indx),alpha=0.1) +
scale_colour_gradientn(colours = c("yellow", "green")) +
new_scale_colour() +
geom_point(data=places,mapping=aes(x=width1,y=height1,color=i2),alpha=0.1) +
scale_colour_gradientn(colours=c('orange','red')) +
theme(legend.position="none")
rm(steps)
rm(steps2)
rm(places)
rm(accum)
rm(con)
rm(matQ)
rm(pricing)
rm(d)
rm(f)
rm(g)
rm(width)
rm(x)
rm(y)
rm(z)
rm(tbs)
rm(t)
rm(sec_srv)
rm(scen2_tbs)
rm(scen1_tbs)
rm(c2_yrly)
rm(height)
rm(awsflx_yrly)
rm(rate)
library(neotoma2)
library(tidyverse)
library(sf)
library(geojsonsf)
lats = c(-16,-16,-36,-36) %>% as.data.frame()
lons = c(10,41,10,41) %>% as.data.frame()
coords = lats %>% cbind(lons)
names(coords) = c("lat","lon") %>% st_as_sf(coords=c("lon","lat") crs="WGS84")
lats = c(-16,-16,-36,-36) %>% as.data.frame()
lons = c(10,41,10,41) %>% as.data.frame()
coordinates = lats %>% cbind(lons)
names(coords) = c("lat","lon")
coordinates = coordinates %>% st_as_sf(coords=c("lon","lat") crs="WGS84")
rm(coords)
coordinates = coordinates %>% st_as_sf(coords=c("lon","lat"), crs="WGS84")
lats = c(-16,-16,-36,-36) %>% as.data.frame()
lons = c(10,41,10,41) %>% as.data.frame()
coordinates = lats %>% cbind(lons)
names(coordinates) = c("lat","lon")
coordinates = coordinates %>% st_as_sf(coords=c("lon","lat"), crs="WGS84")
library(tmap)
library(osmdata)
library(rosm)
tm_shape(osm_raster(coordinates)) + tm_rgb() + tm_shape(coordinates) + tm_dots()
tm_shape(osm.raster(coordinates)) + tm_rgb() + tm_shape(coordinates) + tm_dots()
lats = c(-16,-16,-36,-36) %>% as.data.frame()
lons = c(10,41,10,41) %>% as.data.frame()
coordinates = lats %>% cbind(lons)
names(coordinates) = c("lat","lon")
coordinates = coordinates %>% st_as_sf(coords=c("lon","lat"), crs="WGS84") %>% mutate(dummyID = 1) %>% group_by(dummyID) %>% dplyr::summarize() %>% st_cast("polygon")
lats = c(-16,-16,-36,-36) %>% as.data.frame()
lons = c(10,41,10,41) %>% as.data.frame()
coordinates = lats %>% cbind(lons)
names(coordinates) = c("lat","lon")
coordinates = coordinates %>% st_as_sf(coords=c("lon","lat"), crs="WGS84") %>% mutate(dummyID = 1) %>% group_by(dummyID) %>% dplyr::summarize() %>% st_cast("POLYGON")
tm_shape(osm.raster(coordinates)) + tm_rgb() + tm_shape(coordinates) + tm_polygon()
tm_shape(osm.raster(coordinates)) + tm_rgb() + tm_shape(coordinates) + tm_polygons()
coord_json = sf_geojson(coordinates)
paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",200,"&altmax=",300,"&loc=",coord_json,"&limit=999&offset=0")
library(httr)
library(jsonlite)
GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",200,"&altmax=",300,"&loc=",coord_json,"&limit=999&offset=0"))
GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",200,"&loc=",coord_json,"&limit=999&offset=0"))
altmin = 1000 #m
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",altmin,"&loc=",coord_json,"&limit=999&offset=0")))
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",altmin,"&loc=",coord_json,"&limit=999&offset=0")))$data
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",altmin,"&loc=",coord_json,"&limit=2&offset=0")))$data
altmin = 000 #m
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",altmin,"&loc=",coord_json,"&limit=999&offset=0")))$data
altmin = 1000 #m
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?altmin=",altmin,"&loc=",coord_json,"&limit=999&offset=0")))$data
View(sites)
sites[[1]]
sites[[1]]$collectionunits
idx = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets)))
idx = idx + 1
}
}
idx = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets))) {
idx = idx + 1
}
}
}
sites[[i]]$collectionunits[[j]]$dataset[[k]]
sites_mat = matrix(nrow=idx,ncol=11)
idx2 = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets))) {
idx2 = idx2 + 1
for (m in seq(5)) {
if (!is.null(sites[[i][[m]])) {
sites_mat[[idx2, m]] = sites[[i]][[m]]
}
}
if (!is.null(sites[[i]]$collectionunits[[j]]$handle)) {
sites_mat[[idx2,6]] = sites[[i]]$collectionunits[[j]]$handle
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunit)) {
sites_mat[[idx2,7]] = sites[[i]]$collectionunits[[j]]$collectionunit
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunitid)) {
sites_mat[[idx2,8]] = sites[[i]]$collectionunits[[j]]$collectionunitid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunittype)) {
sites_mat[[idx2,9]] = sites[[i]]$collectionunits[[j]]$collectionunittype
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid)) {
sites_mat[[idx2,10]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype)) {
sites_mat[[idx2,11]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype
}
}
}
}
sites_df = as.data.frame(sites_mat)
sites[[i]]
sites[[i]][[m]]
m=1
sites[[i]][[m]]
sites_mat = matrix(nrow=idx,ncol=11)
idx2 = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets))) {
idx2 = idx2 + 1
for (m in seq(5)) {
if (!is.null(sites[[i]][[m]])) {
sites_mat[[idx2, m]] = sites[[i]][[m]]
}
}
if (!is.null(sites[[i]]$collectionunits[[j]]$handle)) {
sites_mat[[idx2,6]] = sites[[i]]$collectionunits[[j]]$handle
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunit)) {
sites_mat[[idx2,7]] = sites[[i]]$collectionunits[[j]]$collectionunit
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunitid)) {
sites_mat[[idx2,8]] = sites[[i]]$collectionunits[[j]]$collectionunitid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunittype)) {
sites_mat[[idx2,9]] = sites[[i]]$collectionunits[[j]]$collectionunittype
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid)) {
sites_mat[[idx2,10]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype)) {
sites_mat[[idx2,11]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype
}
}
}
}
sites_df = as.data.frame(sites_mat)
View(sites_df)
names(sites_df) = c("siteid","sitename","sitedescription","geography","altitude","handle","collectionunit","collectionunitid","collectionunittype","datasetid","datasettype")
sites_neo = get_sites(paste0(sites_df$siteid),all_data=TRUE)
sites_neo = get_sites(sites_df$siteid,all_data=TRUE)
sites_neo = get_sites(c(sites_df$siteid),all_data=TRUE)
c(sites_df$siteid)
c(sites_df$siteid[[]])
distinct(sites_df$siteid)
ids = sites_df %>% distinct(siteid)
siteids = sites_df %>% distinct(siteid)
siteids
get_sites(siteids)
get_sites(100)
get_sites(c(siteids))
get_sites(list(siteids))
paste0(siteids)
class(siteids)
View(siteids)
get_sites(as.numeric(siteids))
get_sites(siteids$siteid)
get_sites(as.numeric(siteids$siteid))
sites_neo = get_sites(as.numeric(siteids$siteid),all_data=TRUE)
data = samples(get_downloads(get_datasets(sites_neo,all_data=TRUE)))
data = samples(get_downloads(get_datasets(sites_neo,all_data=TRUE),all_data=TRUE))
data = samples(get_downloads(get_datasets(sites_neo,all_data=TRUE),all_data=TRUE),all_data=TRUE)
View(data)
pollendata = data %>% dplyr::filter(elementtype=="pollen" | elementtype == "pollen/spore")
data %>% group_by(elementtype) %>% count()
data %>% group_by(datasettype) %>% count()
pollendata = data %>% dplyr::filter(datasettype=="pollen")
pollendata %>% group_by(elementtype) %>% count()
rm(data)
View(pollendata)
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n)) %>% head(n=250)
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n)) %>% View()
getwd()
apd_harmTable = read.csv("APD_dictionnary_export.csv")
setwd("GitHub/Neotomatutorials")
getwd()
apd_harmTable = read.csv("APD_dictionnary_export.csv")
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL)
View(apd_harmTable)
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL,sep=";")
pollendata %>% dplyr::filter(variablname %in% apd_harmTable$Taxon..original.name.)
pollendata %>% dplyr::filter(variablename %in% apd_harmTable$Taxon..original.name.) %>% count()
pollendata %>% dplyr::filter(!variablename %in% apd_harmTable$Taxon..original.name.)
pollendata %>% dplyr::filter(!variablename %in% apd_harmTable$Taxon..original.name.) %>% select(variablename)
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name))
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.))
pollendata %>% group_by(Taxon..revised.nomenclature.) %>% count() %>% arrange(desc(n))
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.)) %>% mutate(Taxon..revised.nomenclature. = case_when(variablename))qfrg
library(stringr)
str_detect("poa",pollendata$variablename)
help(str_detect)
str_detect(pollendata$variablename,regex('poaceae', ignore_case = T))
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.)) %>% mutate(Taxon..revised.nomenclature. = case_when(str_detect(pollendata$variablename,regex('poaceae', ignore_case = T)) ~ "Poaceae undiff.", TRUE ~ Taxon..revised.nomenclature.))
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.)) %>% mutate(Taxon..revised.nomenclature. = case_when(str_detect(variablename,regex('poaceae', ignore_case = T)) == TRUE ~ "Poaceae undiff.", TRUE ~ Taxon..revised.nomenclature.))
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.)) %>% mutate(Taxon..revised.nomenclature. = case_when(str_detect(variablename,regex('poaceae', ignore_case = T)) ~ "Poaceae undiff.", TRUE ~ Taxon..revised.nomenclature.))
pollendata = data %>% dplyr::filter(datasettype=="pollen")
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL,sep=";")
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.))
pollendata = pollendata %>% mutate(Taxon..revised.nomenclature. = case_when(
str_detect(variablename,regex('poaceae', ignore_case = T)) ~ "Poaceae undiff.",
TRUE ~ Taxon..revised.nomenclature.))
pollendata = data %>% dplyr::filter(datasettype=="pollen")
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL,sep=";")
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.))
data = samples(get_downloads(get_datasets(sites_neo,all_data=TRUE),all_data=TRUE))
pollendata = data %>% dplyr::filter(datasettype=="pollen")
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL,sep=";")
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.))
pollendata = pollendata %>% mutate(Taxon..revised.nomenclature. = case_when(
str_detect(variablename,regex('poaceae', ignore_case = T)) ~ "Poaceae undiff.",
TRUE ~ Taxon..revised.nomenclature.))
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
pollendata %>% group_by(Taxon..revised.nomenclature.) %>% count() %>% arrange(desc(n))
pollendata %>% dplyr::filter(is.na(Taxon..revised.nomenclature.)) %>% count()
pollendata %>% dplyr::filter(is.na(Taxon..revised.nomenclature.))
pollendata %>% dplyr::filter(is.na(Taxon..revised.nomenclature.)) %>% select(Taxon..revised.nomenclature.)
pollendata %>% dplyr::filter(is.na(Taxon..revised.nomenclature.)) %>% select(variablename)
pollendata %>% group_by(Taxon..revised.nomenclature.) %>% count() %>% arrange(desc(n))
pollendata %>% group_by(Family.name) %>% count() %>% arrange(desc(n))
pollendata = data %>% dplyr::filter(datasettype=="pollen")
pollendata %>% group_by(variablename) %>% count() %>% arrange(desc(n))
apd_harmTable = read.csv("APD_dictionnary_export.csv",row.names=NULL,sep=";")
pollendata = pollendata %>% left_join(apd_harmTable, by=join_by(variablename == Taxon..original.name.))
pollendata = pollendata %>% mutate(Taxon..revised.nomenclature. = case_when(
str_detect(variablename,regex('poaceae', ignore_case = T)) ~ "Poaceae undiff.",
TRUE ~ Taxon..revised.nomenclature.)) %>% mutate(Family.name = case_when(
str_detect(variablename,regex('poaceae', ignore_case = T)) ~ "POACEAE",
TRUE ~ Family.name))
pollendata %>% group_by(Family.name) %>% count() %>% arrange(desc(n))
View(pollendata)
round(pollendata$elev,-3)
round(pollendata$elev,-2)
round(pollendata$elev,-2.5)
round(pollendata$elev,-2.2)
pollen_alt %>% mutate(elevbins = round(elev,-2)) %>% group_by(elevbins) %>% count() %>% arrange(desc(n))
pollendata %>% mutate(elevbins = round(elev,-2)) %>% group_by(elevbins) %>% count() %>% arrange(desc(n))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name) %>% summarize(polcount = sum(value)) %>% ungroup() %>% group_by(elevbins) %>% summarize(props = polcount/sum(polcount))
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% group_by(elevbins) %>% count() %>% arrange(desc(n))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name) %>% summarize(polcount = sum(value)) %>% ungroup() %>% group_by(elevbins) %>% summarize(props = polcount/sum(polcount))
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name) %>% summarize(polcount = sum(value)) %>% ungroup() %>% group_by(elevbins) %>% summarize(props = polcount/sum(polcount))
View(pollen_alt)
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% group_by(elevbins) %>% summarize(total = polcount/sum(polcount))
View(pol_total)
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins) %>% summarize(total = polcount/sum(polcount))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total)
help(pivot_wider)
wide_alt = pollen_alt %>% dplyr::pivot_wider(id_cols=elevbins,names_from=Family.name,values=from=prop)
wide_alt = pollen_alt %>% dplyr::pivot_wider(id_cols=elevbins,names_from=Family.name,values_from=prop)
wide_alt = pollen_alt %>% pivot_wider(id_cols=elevbins,names_from=Family.name,values_from=prop)
View(wide_alt)
ggplot(pollen_alt) +
geom_point(mapping=aes(x=elevbin,y=POACEAE))
ggplot(pollen_alt) +
geom_point(mapping=aes(x=elevbins,y=POACEAE))
names(wide_alt)
ggplot(pollen_alt) +
geom_point(mapping=aes(x=elevbins,y=POACEAE))
ggplot(wide_alt) +
geom_point(mapping=aes(x=elevbins,y=POACEAE))
ggplot(pollen_alt) +
geom_point(mapping=aes(x=elevbins,y=ACANTHACEAE))
ggplot(wide_alt) +
geom_point(mapping=aes(x=elevbins,y=ACANTHACEAE))
ggplot(wide_alt) +
geom_point(mapping=aes(x=elevbins,y=AMARANTHACEAE))
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=prop,group=Family.name))
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name))
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name),alpha=0.5)
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2)
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) + theme(legend.position="none")
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2))
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age,.remove=FALSE)
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age)
hist(pollen_alt$age)
hist(pollen_alt$age,bins=50)
agetest = pollen_alt %>% dplyr::filter(age < 30000)
hist(agetest$age)
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age) %>% mutate(agebins = round(age,-3))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name,agebins) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins,agebins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100)
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100) %>% drop_na()
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age) %>% mutate(agebins = round(age,-3))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name,agebins) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins,agebins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100) %>% drop_na()
gplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) +
facet_wrap(~agebins) +
theme(legend.position="none")
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) +
facet_wrap(~agebins) +
theme(legend.position="none")
pollen_alt_young = pollen_alt %>% dplyr::filter(agebins < 29000)
ggplot(pollen_alt) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) +
facet_wrap(~agebins) +
theme(legend.position="none")
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) +
facet_wrap(~agebins) +
theme(legend.position="none")
View(pollen_alt_young)
pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% arrange(desc(propsum))
toptaxa = pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% head(n=10)
pollen_alt_young = pollen_alt_young %>% dplyr::filter(Family.name %in% toptaxa$Family.name)
pollen_alt_young = pollen_alt %>% dplyr::filter(agebins < 29000)
toptaxa = pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% arrange(desc(propsum)) %>% head(n=10)
pollen_alt_young = pollen_alt_young %>% dplyr::filter(Family.name %in% toptaxa$Family.name)
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age) %>% mutate(agebins = round(age,-4))
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name,agebins) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins,agebins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100) %>% drop_na()
wide_alt = pollen_alt %>% pivot_wider(id_cols=elevbins,names_from=Family.name,values_from=prop)
pollen_alt_young = pollen_alt %>% dplyr::filter(agebins < 29000)
toptaxa = pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% arrange(desc(propsum)) %>% head(n=10)
pollen_alt_young = pollen_alt_young %>% dplyr::filter(Family.name %in% toptaxa$Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=Family.name,color=Family.name),alpha=0.5,lwd=2) +
facet_wrap(~agebins) +
theme(legend.position="none")
plot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=agebins),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=agebins),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=agebins),alpha=0.5,lwd=2) +
facet_wrap(~as.factor(Family.name))
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins)),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=as.factor(agebins),color=as.factor(agebins)),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins),fill=as.factor(agebins)),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins)),alpha=0.5,lwd=2) +
facet_wrap(~Family.name)
ggplot(pollen_alt_young, aes(x = elevbins, y = log(prop), color = as.factor(agebins))) +
geom_line(mapping = aes(group = agebins), alpha = 0.5, lwd = 2) +
facet_wrap(~Family.name) +
labs(color = "Age Bins")
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins)),lwd=2) +
facet_wrap(~Family.name)
round(pollen_alt$age/500,-4)*500
round(pollendata$age/500,-4)*500
round(pollendata$age/500,-4)
round(pollendata$age,-4)
round(pollendata$age/500,-3)
round(pollendata$age/500,-2)
round(pollendata$age/500,-1)
round(pollendata$age/500)
pollendata$age
round(pollendata$age/500,-1)
round(pollendata$age/500,-1)*500
pollendata$age
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age) %>% mutate(agebins = round(age/500)*500)
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name,agebins) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins,agebins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100) %>% drop_na()
wide_alt = pollen_alt %>% pivot_wider(id_cols=elevbins,names_from=Family.name,values_from=prop)
pollen_alt_young = pollen_alt %>% dplyr::filter(agebins < 29000)
toptaxa = pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% arrange(desc(propsum)) %>% head(n=10)
pollen_alt_young = pollen_alt_young %>% dplyr::filter(Family.name %in% toptaxa$Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins)),lwd=2) +
facet_wrap(~Family.name)
pollen_alt = pollendata %>% mutate(elevbins = round(elev,-2)) %>% drop_na(age) %>% mutate(agebins = round(age/5000)*5000)
pollen_alt = pollen_alt %>% group_by(elevbins,Family.name,agebins) %>% summarize(polcount = sum(value))
pol_total = pollen_alt %>% ungroup() %>% group_by(elevbins,agebins) %>% summarize(total = sum(polcount))
pollen_alt = pollen_alt %>% left_join(pol_total) %>% mutate(prop = polcount/total*100) %>% drop_na()
wide_alt = pollen_alt %>% pivot_wider(id_cols=elevbins,names_from=Family.name,values_from=prop)
pollen_alt_young = pollen_alt %>% dplyr::filter(agebins < 29000)
toptaxa = pollen_alt_young %>% group_by(Family.name) %>% dplyr::summarize(propsum = sum(prop)) %>% arrange(desc(propsum)) %>% head(n=10)
pollen_alt_young = pollen_alt_young %>% dplyr::filter(Family.name %in% toptaxa$Family.name)
ggplot(pollen_alt_young) +
geom_line(mapping=aes(x=elevbins,y=log(prop),group=agebins,color=as.factor(agebins)),lwd=2) +
facet_wrap(~Family.name)
library(bioclim)
install.packages('bioclim')
library(geodata)
install.packages('geodata')
install.packages("geodata")
library(geodata)
